name: Create S3 State Bucket

on:
  push:
    branches:
      - main
jobs:
  create-s3-bucket:
    runs-on: ubuntu-latest
    container:
      image: python:3.9.21-bookworm
    defaults:
      run:
        working-directory: .
    env:
      STAGE: "dev"
      REGION: "us-east-1"
      STATE_BUCKET: "time-to-eat-terraform-state-bucket"
      AWS_ACCOUNT: "<YOUR_ACCOUNT_ID>"
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set AWS credentials
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}
          mask-aws-account-id: false

      - name: Install Awscli and envsubst
        run: pip install awscli && aws sts get-caller-identity && apt update && apt install -y  gettext 

      - name: State Bucket Policy Interplation
        run: |
          export STATE_BUCKET=${{ env.STATE_BUCKET }} AWS_ACCOUNT=${{ env.AWS_ACCOUNT }}
          envsubst < state_bucket_policy.json > tmp.txt && mv tmp.txt state_bucket_policy.json

      # Check terraform state bucket exist if not create it
      - name: Create S3 Bucket If Doesnt Exist
        run: |
          if [ "$(aws s3api head-bucket --bucket ${{ env.STATE_BUCKET }} 2>/dev/null)" ]; then
            echo "Terraform state bucket ${{ env.STATE_BUCKET }} already exist, moving on."
          else
            echo "Terraform state bucket ${{ env.STATE_BUCKET }} doesnt exist, creating!!."
            aws s3api create-bucket --bucket "${{ env.STATE_BUCKET }}" --region ${{ env.REGION }}
            aws s3api put-bucket-policy --bucket "${{ env.STATE_BUCKET }}" --policy file://state_bucket_policy.json
          fi
